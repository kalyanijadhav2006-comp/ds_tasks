def longestPalindrome(s: str) -> str:
    n = len(s)
    if n <= 1:
        return s
    
    start, max_len = 0, 1

   
    def expandAroundCenter(left: int, right: int):
        nonlocal start, max_len
        while left >= 0 and right < n and s[left] == s[right]:
            if right - left + 1 > max_len:
                start = left
                max_len = right - left + 1
            left -= 1
            right += 1

    for i in range(n):
        expandAroundCenter(i, i)       
        expandAroundCenter(i, i + 1)   
        
    return s[start:start + max_len]



print(longestPalindrome("babad"))  